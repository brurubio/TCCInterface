<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ahwAAAAASUVORK5CYII=
</value>
  </data>
</root>